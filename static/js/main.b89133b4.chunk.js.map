{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movie","getMovies","a","axios","get","movies","data","console","log","setState","this","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gTAiCeA,MA7Bf,YAAmD,IAAnCC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OACtC,OACI,yBAAKC,UAAY,SACjB,yBAAKC,IAAKH,EAAQI,IAAON,EAAOA,MAASA,IACzC,yBAAKI,UAAY,eACb,wBAAIA,UAAY,gBAAgBJ,GAChC,wBAAII,UAAY,eAAeL,GAC/B,wBAAIK,UAAU,iBACTD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OACR,wBAAIC,IAAOD,EAAOL,UAAU,iBACvBI,OAIb,uBAAGJ,UAAY,kBAAkBH,EAAQU,MAAM,EAAE,KAAjD,UC4BGC,G,kNAvCbC,MAAQ,CACNC,WAAY,EACZC,MAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAC4BC,IAAMC,IAAI,4DADtC,gBACUC,EADV,EACHC,KAAOA,KAAMD,OACpBE,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAACJ,SAAQN,WAAY,IAHzB,2C,kEAMVW,KAAKT,c,+BAEE,IAAD,EACqBS,KAAKZ,MAAzBC,EADD,EACCA,UAAUM,EADX,EACWA,OACjB,OACA,6BAAShB,UAAY,aAClBU,EACC,yBAAKV,UAAY,UACf,0BAAMA,UAAY,gBAAlB,eAGJ,yBAAKA,UAAY,UACdgB,EAAOb,KAAI,SAAAQ,GAAK,OACnB,kBAAC,EAAD,CACEL,IAAMK,EAAMW,GACZA,GAAIX,EAAMW,GACV3B,KAAMgB,EAAMhB,KACZC,MAAOe,EAAMf,MACbC,QAASc,EAAMd,QACfC,OAAQa,EAAMY,mBACdxB,OAAUY,EAAMZ,kB,GA/BNyB,IAAMC,YCDxBC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,W","file":"static/js/main.b89133b4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year,title,summary,poster,genres}){\r\n    return ( \r\n        <div className = \"movie\">\r\n        <img src={poster} alt = {title} title = {title} />\r\n        <div className = \"movie__data\">\r\n            <h3 className = \"movie__title\">{title}</h3>\r\n            <h5 className = \"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">\r\n                {genres.map((genre,index) => (\r\n                    <li key = {index} className=\"genres__genre\">\r\n                        {genre}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <p className = \"movie__summary\">{summary.slice(0,140)}...</p>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n  };\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movie : []\n  };\n  getMovies = async() =>{\n    const {data: {data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\")\n    console.log(movies)\n    this.setState({movies, isLoading : false})\n  };\n  componentDidMount(){\n    this.getMovies();\n  }\n  render(){\n    const {isLoading,movies} = this.state;\n    return ( \n    <section className = \"container\">\n      {isLoading ? (\n        <div className = \"loader\">\n          <span className = \"loader__text\">Loading...</span>\n        </div>\n    ) : (\n      <div className = \"movies\">\n        {movies.map(movie=>(\n      <Movie \n        key ={movie.id} \n        id={movie.id} \n        year={movie.year} \n        title={movie.title} \n        summary={movie.summary} \n        poster={movie.medium_cover_image} \n        genres = {movie.genres}/>\n    ))}\n    </div>\n        )}\n      </section>\n      );\n    }\n}\n\nexport default App;\n\n/*\nclass App extends React.Component{\n  state = {\n    count : 0\n  }\n  add = () => {\n    console.log(\"add\");\n    //this.setState({count : this.state.count + 1})\n    this.setState(current => ({count : current.count + 1}))\n  };\n  minus = () => {\n    console.log(\"minus\");\n    //this.setState({count : this.state.count - 1})\n    this.setState(current => ({count : current.count - 1}))\n  };\n  render() {\n     //즉시 호출되는 것이 아니라 click 했을 때만 function이 호출되길 원한다.\n    return <div>\n      <h1>The number is : {this.state.count}</h1>\n      <button onClick={this.add}>Add</button>\n      <button onClick={this.minus}>Minus</button>\n      </div>\n  }\n}\n\n\nexport default App;\n\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n//react application은 한 번에 하나의 component만 rendering 할 수 있다.\nReactDOM.render( < App / > , document.getElementById(\"root\"));"],"sourceRoot":""}